#!/bin/bash
# generated by ll-helper

echo Installing Dependencies
for i in $(find "./linglong/sources" -name "*.deb"); do
    dpkg -x "$i" $PREFIX
done

# /opt/apps/APP_ID/files => $PREFIX
# /opt/apps/APP_ID/entries => $PREFIX/share
# /usr => $PREFIX

function merge() {
    SRC=$1
    DEST=$2
    while read file; do
        FROM=$SRC/$file
        TO=$DEST/$file
        if [ -d "$FROM" ]; then
            mkdir -p "$TO"
        elif [ -L "$TO" ]; then
            echo RM $TO
            rm "$TO"
        else
            mv "$FROM" "$TO"
        fi
    done <<<$(find "$SRC" -printf "%P\n")
    rm -rf "$SRC"
}

merge $PREFIX/opt/apps/*/files $PREFIX
merge $PREFIX/opt/apps/*/entries $PREFIX/share

merge $PREFIX/${LINGLONG_RAW_ID}/files $PREFIX
merge $PREFIX/${LINGLONG_RAW_ID}/entries $PREFIX/share
merge $PREFIX/usr $PREFIX



LD_PATH=$(find $PREFIX -name "*.so*" | xargs -I{} -r dirname "{}"| grep -v "/lib/jvm" | sort -u | paste -sd :)
find $PREFIX -type f -executable -o -name "*.so" -o -name "*.so.*" | xargs -r -I{} env LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$LD_PATH" ldd "{}" 2>/dev/null | grep -P "not found" | grep -oP "^\s+\K\S+" | sort -u >missing.list

if [ -s "missing.list" ]; then
    echo 'Warning: Found missing dependencies, listed in missing.list'
fi
