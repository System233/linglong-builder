name: Linglong Builder
run-name: Build Linglong Packages
on:
  push:
    branches:
      - main
jobs:
  scan:
    runs-on: ubuntu-24.04
    outputs:
      appid-list: ${{ steps.list-appid.outputs.appid }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: List target
        id: list-appid
        run: |
          TAG_NAME=$(date '+%Y%m%d')
          RELEASE=$(curl --silent "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/tags/$TAG_NAME" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}')
          while read APP_ID;do
            NEW_APP_ID="${APP_ID}.linyaps"
            if grep -q "${NEW_APP_ID}" ./rebuild.list;then
              SKIP_BUILD=false
            else
              SKIP_BUILD=$(echo $RELEASE |jq -r --arg FILE "${NEW_APP_ID}" '.assets | map(.name | startswith($FILE)) | any' || echo false)
            fi

            if [ "${SKIP_BUILD}" == "false" ];then
              echo "Selected ${APP_ID}"
              echo "\"${APP_ID}\"" >>_build_app.list
            fi
          done <<<$(cat ./list.csv|grep -v -P '^#'| cut -d, -f1)

          echo "appid=[$(cat _build_app.list|paste -sd ,)]" >> $GITHUB_OUTPUT
  build:
    needs: scan
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        appid: ${{ fromJson(needs.scan.outputs.appid-list) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Preflight
      #   id: preflight
      #   run: |
      #     TAG_NAME=$(date '+%Y%m%d')
      #     APP_ID=${{matrix.appid}}
      #     NEW_APP_ID="${APP_ID}.linyaps"
      #     SKIP_BUILD=$(curl --silent "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/tags/$TAG_NAME" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' |jq -r --arg FILE "${NEW_APP_ID}" '.assets | map(.name | startswith($FILE)) | any' || echo false)
      #     if grep -q "${NEW_APP_ID}" ./rebuild.list;
      #     then
      #         SKIP_BUILD=false
      #     fi
      #     echo TAG_NAME=${TAG_NAME}
      #     echo SKIP_BUILD=${SKIP_BUILD}
      #     echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
      #     echo "skip_build=${SKIP_BUILD}" >> $GITHUB_OUTPUT

      # - name: linglong-builder-cache
      #   id: linglong-builder-cache
      #   if: ${{steps.preflight.outputs.skip_build=='false'}}
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.cache/linglong-builder/layers/main/org.deepin.base
      #       ~/.cache/linglong-builder/layers/main/org.deepin.foundation
      #       ~/.cache/linglong-builder/layers/main/org.deepin.Runtime
      #       ~/.cache/linglong-builder/layers/main/com.uniontech.foundation
      #       ~/.cache/linglong-builder/repo/
      #     key: ${{ runner.os }}-linglong-builder-cache

      - name: linglong-builder-repo
        id: linglong-builder-repo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/linglong-builder/repo/
          key: ${{ runner.os }}-linglong-builder-repo

      - name: linglong-builder-deepin-Runtime
        id: linglong-builder-deepin-Runtime
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/linglong-builder/layers/main/com.deepin.Runtime
          key: ${{ runner.os }}-linglong-builder-deepin-Runtime

      - name: linglong-builder-deepin-base
        id: linglong-builder-deepin-base
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/linglong-builder/layers/main/com.deepin.base
          key: ${{ runner.os }}-linglong-builder-deepin-base

      - name: linglong-builder-deepin-foundation
        id: linglong-builder-deepin-foundation
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/linglong-builder/layers/main/org.deepin.foundation
          key: ${{ runner.os }}-linglong-builder-deepin-foundation

      - name: linglong-builder-uniontech-foundation
        id: linglong-builder-uniontech-foundation
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/linglong-builder/layers/main/com.uniontech.foundation
          key: ${{ runner.os }}-linglong-builder-uniontech-foundation

      - name: linglong-helper-cache
        id: linglong-helper-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/linglong-helper
          key: ${{ runner.os }}-linglong-helper-cache

      - name: install
        run: |
          sudo apt install -y apt-transport-https ca-certificates curl gpg xdg-utils
          sudo mkdir -p /etc/apt/keyrings/
          curl -fsSL https://download.opensuse.org/repositories/home:/kamiyadm/xUbuntu_24.04/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/linglong-apt-keyring.gpg
          echo "deb [signed-by=/etc/apt/keyrings/linglong-apt-keyring.gpg] https://download.opensuse.org/repositories/home:/kamiyadm/xUbuntu_24.04/ ./" | sudo tee /etc/apt/sources.list.d/linglong.list
          sudo apt update
          sudo apt install linglong-builder linglong-box linglong-bin
          ll-cli --version

      - name: Build ${{matrix.appid}}
        id: build
        run: |
          echo APPID=${{matrix.appid}}
          export REPO_ROOT=$(pwd)/repos
          export APP_ID=${{matrix.appid}}
          export NEW_APP_ID="${APP_ID}.linyaps"
          export APP_NAME=$(grep ${{matrix.appid}} list.csv | cut -d, -f2)
          export APP_DIR=${REPO_ROOT}/${NEW_APP_ID}
          export CACHE_DIR=~/.cache/linglong-helper

          yarn install
          bash ./build.sh

          git add .
          COMMIT=$(git diff --cached --quiet&&echo no||echo yes)

          echo COMMIT=${COMMIT}
          echo "appid=${NEW_APP_ID}" >> $GITHUB_OUTPUT
          echo "appdir=${APP_DIR}" >> $GITHUB_OUTPUT
          echo "commit=${COMMIT}" >> $GITHUB_OUTPUT
          echo "layer_name=$(find ${APP_DIR} -name "*_binary.layer")" >> $GITHUB_OUTPUT
          echo "tag_name=$(date '+%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Commit
        if: ${{steps.build.outputs.commit == 'yes' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Build ${{matrix.appid}}"
          git status -s
          git pull --rebase origin main
          git push origin main

      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{steps.build.outputs.commit == 'yes' }}
        with:
          tag_name: ${{steps.build.outputs.tag_name}}
          body: ${{matrix.appid}}
          append_body: true
          files: |
            ${{steps.build.outputs.layer_name}}
