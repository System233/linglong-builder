name: Linglong Builder
run-name: Build Linglong Packages
on:
  push:
    branches:
      - main
jobs:
  scan:
    runs-on: ubuntu-24.04
    outputs:
      appid-list: ${{ steps.list-appid.outputs.appid }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: List target
        id: list-appid
        run: |
          echo "appid=$(node ./list-target.js)" >> $GITHUB_OUTPUT
  build:
    needs: scan
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        appid: ${{ fromJson(needs.scan.outputs.appid-list) }}
      fail-fast: false
    steps:
      - name: Preflight
        id: preflight
        run: |
          TAG_NAME=$(date '+%Y-%m-%d')
          APP_ID=${{matrix.appid}}
          NEW_APP_ID="${APP_ID}.linyaps"
          SKIP_BUILD=$(curl "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/tags/$TAG_NAME" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' 2>/dev/null|jq -r --arg FILE "${NEW_APP_ID}" '.assets | map(.name | startswith($FILE)) | any')

          echo TAG_NAME=${TAG_NAME}
          echo SKIP_BUILD=${SKIP_BUILD}
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "skip_build=${SKIP_BUILD}" >> $GITHUB_OUTPUT

      - name: Checkout
        if: ${{steps.preflight.outputs.skip_build=='false'}}
        uses: actions/checkout@v4

      - name: linglong-builder-cache
        id: linglong-builder-cache
        if: ${{steps.preflight.outputs.skip_build=='false'}}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/linglong-builder/layers/main/org.deepin.base
            ~/.cache/linglong-builder/layers/main/org.deepin.foundation
            ~/.cache/linglong-builder/layers/main/org.deepin.Runtime
            ~/.cache/linglong-builder/layers/main/com.uniontech.foundation
            ~/.cache/linglong-builder/repo/
          key: ${{ runner.os }}-linglong-builder-cache
      - name: linglong-helper-cache
        id: linglong-helper-cache
        if: ${{steps.preflight.outputs.skip_build=='false'}}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/linglong-helper
          key: ${{ runner.os }}-linglong-helper-cache
      - name: install
        if: ${{steps.preflight.outputs.skip_build=='false'}}
        run: |
          sudo apt install -y apt-transport-https ca-certificates curl gpg xdg-utils
          sudo mkdir -p /etc/apt/keyrings/
          curl -fsSL https://download.opensuse.org/repositories/home:/kamiyadm/xUbuntu_24.04/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/linglong-apt-keyring.gpg
          echo "deb [signed-by=/etc/apt/keyrings/linglong-apt-keyring.gpg] https://download.opensuse.org/repositories/home:/kamiyadm/xUbuntu_24.04/ ./" | sudo tee /etc/apt/sources.list.d/linglong.list
          sudo apt update
          sudo apt install linglong-builder linglong-box linglong-bin
          ll-cli --version
      - name: Build ${{matrix.appid}}
        id: build
        if: ${{steps.preflight.outputs.skip_build=='false'}}
        run: |
          echo APPID=${{matrix.appid}}
          export REPO_ROOT=$(pwd)/repos
          export APP_ID=${{matrix.appid}}
          export NEW_APP_ID="${APP_ID}.linyaps"
          export APP_NAME=$(grep ${{matrix.appid}} list.csv | cut -d, -f2)
          export APP_DIR=${REPO_ROOT}/${NEW_APP_ID}
          export CACHE_DIR=~/.cache/linglong-helper
          yarn install
          bash ./build.sh

          git add ${APP_DIR}
          echo "appid=${NEW_APP_ID}" >> $GITHUB_OUTPUT
          echo "commit=$(git diff --cached --quiet&&echo no||echo yes)" >> $GITHUB_OUTPUT


          echo "layer_name=$(find ${APP_DIR} -name "*_binary.layer")" >> $GITHUB_OUTPUT
          echo "tag_name=$(date '+%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Commit
        if: ${{steps.build.outputs.commit == 'yes' && steps.preflight.outputs.skip_build=='false' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "Update ${{matrix.appid}}"
          git push
      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{steps.build.outputs.commit == 'yes' && steps.preflight.outputs.skip_build=='false' }}
        with:
          tag_name: ${{steps.build.outputs.tag_name}}
          files: |
            ${{steps.build.outputs.layer_name}}
